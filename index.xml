<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>HyoSeung IT blog</title>
    <link>https://HyoseungJeon.github.io/</link>
    <description>Recent content on HyoSeung IT blog</description>
    <image>
      <title>HyoSeung IT blog</title>
      <url>https://HyoseungJeon.github.io/profile2.png</url>
      <link>https://HyoseungJeon.github.io/profile2.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Fri, 31 Jan 2025 09:44:23 +0900</lastBuildDate><atom:link href="https://HyoseungJeon.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CDN</title>
      <link>https://HyoseungJeon.github.io/posts/etc/cdn/</link>
      <pubDate>Fri, 31 Jan 2025 09:44:23 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/etc/cdn/</guid>
      <description>💡 회의 중 이번 프로젝트 Front Server가 CDN으로 배포할 것 이라는 말을 들었다! CDN이 뭐지..? 화면 응답속도 개선 회의 였으니, 관련된 정보일 것 같기는 한데.. 공부의 필요성을 느껴 한번 정리해보았다! 😊😊 정의 CDN이란? 콘텐츠 전송 네트워크(Content Delivery Network)는 데이터 사용량이 많은 애플리케이션의 웹 페이지 로드 속도를 높이는 상호 연결된 서버 네트워크입니다. CDN은 콘텐츠 전송 네트워크 또는 콘텐츠 배포 네트워크를 의미할 수 있습니다. 사용자가 웹 사이트를 방문할 때 해당 웹 사이트 서버의 데이터는 사용자의 컴퓨터에 도달하기 위해 인터넷을 통해 이동해야 합니다.</description>
    </item>
    
    <item>
      <title>Command</title>
      <link>https://HyoseungJeon.github.io/posts/intellij/command/</link>
      <pubDate>Thu, 23 Jan 2025 11:09:55 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/intellij/command/</guid>
      <description> 자꾸 까먹는 단축키들 정리 메소드 추출: ctrl + alt + M 라인 삭제: ctrl + Y or backspace 라인 잘라내기: ctrl + X 리팩터: shift + F6 템플릿: ctrl + alt + T 영역 선택: ctrl + W 자동완성: ctrl + shift + enter 라인 정리: ctrl + alt + L 임포트 정리: ctrl + alt + O </description>
    </item>
    
    <item>
      <title>Jasypt</title>
      <link>https://HyoseungJeon.github.io/posts/java/jasypt/</link>
      <pubDate>Mon, 20 Jan 2025 16:20:25 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/java/jasypt/</guid>
      <description>프로젝트 소스 분석 중 yml File 내에 DB connection 패스워드 부분이 암호화 된 것을 확인했다.
ENC(~~~) 방식으로 선언되어 DB의 패스워드가 암호화 되어있어, 해당 파일을 통해 DB 서버의 정보를 파악할 수 없었다.
하여 공개 래포에 해당 파일을 배포 시 매우 유용하겠다는 생각을 해서 한번 관련된 내용을 찾아보았다!
정의 Jasypt is a java library which allows the developer to add basic encryption capabilities to his/her projects with minimum effort, and without the need of having deep knowledge on how cryptography works.</description>
    </item>
    
    <item>
      <title>LDAP</title>
      <link>https://HyoseungJeon.github.io/posts/etc/ldap/</link>
      <pubDate>Wed, 08 Jan 2025 11:06:52 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/etc/ldap/</guid>
      <description>LDAP이란? 경량 디렉터리 액세스 프로토콜(영어: Lightweight Directory Access Protocol; LDAP)은 TCP/IP 위에서 디렉터리 서비스를 조회하고 수정하는 응용 프로토콜이다.
디렉터리 서비스?
디렉터리 서비스는 네트워크상에서 조직, 사용자, 파일, 디바이스 등의 정보를 저장하고 관리하는 시스템입니다. 전화번호부와 비슷한 개념으로 생각할 수 있습니다.
주요 특징:
주요 특징 계층적 구조로 정보를 저장하고 관리 빠른 읽기 작업에 최적화 중앙집중식 정보 관리 제공 네트워크 자원에 대한 접근 제어 가능 결론적으론 계층화된 데이터를 관리하는 하나의 서비스라고 보면 이해가 빠른 것 같다.</description>
    </item>
    
    <item>
      <title>Thread Local</title>
      <link>https://HyoseungJeon.github.io/posts/java/threadlocal/</link>
      <pubDate>Fri, 26 Apr 2024 16:55:04 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/java/threadlocal/</guid>
      <description>📌 개선하고 싶은 사항이 생겼다!! 현재 프로젝트에서는 등록자, 수정자 Id 값을 모든 Entity 담아 보내는 방식으로 N개의 List 데이터를 보낼 시 모든 객체에 중복되는 id 값을 모두 담고.. 또 넣어주는 소스도 존재하고 있다..!! 사실 이렇게 관리할 필요가 전혀 없어 보여서.. 개선을 해보기로 하였다!! 하여 작업 중 ThreadLocal Class를 보게 되었다!! Java에서 굉장히 초기버전 부터 지원해왔던 기능이라던데 굉장히 유용하고 또 실제로 많은 Lib에서 활용하고 있다는 걸 알게되었다!! 한번 자세히 알아보자~~😁😁 Thread Local 정의 This class provides thread-local variables.</description>
    </item>
    
    <item>
      <title>Custom Validate Annotation</title>
      <link>https://HyoseungJeon.github.io/posts/spring/customvalidateannotation/</link>
      <pubDate>Mon, 22 Apr 2024 10:39:08 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/spring/customvalidateannotation/</guid>
      <description>💡 프로젝트가 자체 Migration 작업을 하고 있다! 하여 다른 모듈에서 공통 코드를 Enum화 하기 시작했는데, 그 중 interface Class를 통하여 공통코드를 관리하게 작업하였다! 나 또한 새로운 작업 때문에 유효성 검증 로직에 공통코드 검증 로직의 추가가 필요 했는데 해당 interface를 활용하여 @Valid 작업을 통해 간편하게 검증을 하면 좋겠다고 생각하여 해당 작업을 하게 됐다!! 😁😁 한번 만들어보자~~ 문제 정의 현재 공통코드 값으로 검증하는 로직은 각자 정적인 방식으로 검증하는 로직을 사용하거나 검증을 하지 않고 있다.</description>
    </item>
    
    <item>
      <title>Blocking Queue</title>
      <link>https://HyoseungJeon.github.io/posts/java/blockingqueue/</link>
      <pubDate>Mon, 25 Mar 2024 11:28:24 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/java/blockingqueue/</guid>
      <description>💡 Logging 시스템을 개발하며 담당하신 AA 분께서 차후 트래픽 증가를 고려하여 다중 쓰레드 방식으로 작업해두신 소스를 설명해두셨다! 하여 내부 소스를 확인해보니 여러가지 내용 중Blocking Queue 라는 Class가 눈에 들어왔다!! 처음 보는 Class 이기도 하고.. 디버깅을 해보니 동작도 신기하였다!! 간단하게 한번 보자! Blocking Queue 정의 A Queue that additionally supports operations that wait for the queue to become non-empty when retrieving an element, and wait for space to become available in the queue when storing an element.</description>
    </item>
    
    <item>
      <title>Page Reload Issue 2</title>
      <link>https://HyoseungJeon.github.io/posts/html/pagereloadissue2/</link>
      <pubDate>Thu, 21 Mar 2024 10:00:36 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/html/pagereloadissue2/</guid>
      <description>💡 Back Office 페이지에서 또 똑같은 issue가 발생했다! 내용은 grid 페이지에서 검색어 란에 focus 상태에서 enter 키 입력 시 page가 reload 되는데 살펴보자! 문제 현상 문제는 간단하다! 검색어를 입력 후 enter 키를 누를 시 페이지가 reload 되고 있다..
원인 문제의 시발점은 최근 엑셀 다운로드 기능 개선이였다! 기존에 본 이슈의 해결을 위해 초기화 부분에서 jQuery를 이용해 form event를 변조하고 있었는데, 업데이트 된 다운로드 방식은 해당 form element의 input 값을 이용하기 위하여 해당 form을 그대로 재사용 하는 방식이였다!</description>
    </item>
    
    <item>
      <title>MSA Id Auditing</title>
      <link>https://HyoseungJeon.github.io/posts/etc/msaidauditing/</link>
      <pubDate>Wed, 20 Mar 2024 14:15:42 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/etc/msaidauditing/</guid>
      <description>🔥 이전에 Scope 관련 글을 쓰며 추가적으로 내용을 찾아 AA 직무 다른 회사분에게 질문을 드렸는데, 해결 사항을 찾았다! 하여 간단하게 기록 해놓으려 한다~~ 개선 사항 이전에 Id 값을 매번 DTO에 set하여 보낸다고 하였다! 그래서 차선은 Context 정보가 있을 시 Header에 값을 세팅하여 요청을 보내는 방식을 생각하였다!
해서 개인 마이그레이션 작업으로 하던 중 질문이 생겨 AA 분에게 질문을 드렸다! 헌데 Context가 아닌 Header 값을 통해 client Info를 관리하는 소스가 있다고 말씀해주시더라!</description>
    </item>
    
    <item>
      <title>Cache</title>
      <link>https://HyoseungJeon.github.io/posts/spring/cache/</link>
      <pubDate>Thu, 14 Mar 2024 14:04:50 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/spring/cache/</guid>
      <description>💡 통계 데이터 산출을 위한 Batch Job 하나를 작업했다! 헌데 Batch 프로젝트 구조 상 Job에서 전역으로 사용할 수 있는 변수를 지정하기 어려운 상황이였다! 하여 작업을 어떻게 할지 고려해보던 중 다른 개발자에게 Cache를 사용해보라는 얘기를 들었다!! 엥 Cache를 쉽게 적용할 수 있는 방법이 있구나..? 하고 그 존재를 알게 되어 내용을 작성해보려고 한다~~😁😁 Spring Cache 정의 The Spring Framework provides support for transparently adding caching to an application. At its core, the abstraction applies caching to methods, thus reducing the number of executions based on the information available in the cache.</description>
    </item>
    
    <item>
      <title>Scope</title>
      <link>https://HyoseungJeon.github.io/posts/spring/scope/</link>
      <pubDate>Thu, 15 Feb 2024 10:38:49 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/spring/scope/</guid>
      <description>💡 MSA 환경에서 개발을 하다 보니.. 여러가지 애로사항이 있다.. 😂 그 중 요즘 개발 중 가장 귀찮다고 느끼는 일은.. DB insert 시 식별자 값을 넣는 일이다..! 주로 생성자, 수정자 ID를 넣는 경우가 대부분인데.. 현 프로젝트에선 매번 해당 id 값들을 set, set, set 한다.. (너무 귀찮다..) 하여 Context로 소지하고 있는 userId 값을 mybatis의 bind로 가져와 set 하는 방식으로 전환 했다! 헌데 문제는.. MSA 환경에서 다른 서버로 값을 전달 시 Context를 그대로 사용하기 어렵다는 점 이였다.</description>
    </item>
    
    <item>
      <title>쏙쏙 들어오는 함수형 코딩</title>
      <link>https://HyoseungJeon.github.io/posts/%EB%8F%85%ED%9B%84%EA%B0%90/%ED%95%A8%EC%88%98%ED%98%95%EC%BD%94%EB%94%A9/</link>
      <pubDate>Thu, 04 Jan 2024 16:25:51 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/%EB%8F%85%ED%9B%84%EA%B0%90/%ED%95%A8%EC%88%98%ED%98%95%EC%BD%94%EB%94%A9/</guid>
      <description>Grokking Simplicity, 심플한 코드로 복잡한 소프트웨어 길들이기</description>
    </item>
    
    <item>
      <title>Page Reload Issue</title>
      <link>https://HyoseungJeon.github.io/posts/html/pagereloadissue/</link>
      <pubDate>Thu, 04 Jan 2024 14:36:29 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/html/pagereloadissue/</guid>
      <description>💡 Back Office의 특정 페이지에서 click event 발생 시 페이지가 자꾸 reload 되는 문제가 발견되었다! 사용량이 낮아 발견되지 않았던 것 같다.. 한번 살펴보자!! 문제 현상 페이지 내의 특정 영역 내의 버튼을 누르면 페이지가 자꾸 reload 되었다! 하여 해당 페이지의 기능이 제 역할을 하지 못하고 있었다..
원인 문제의 원인은 굉장히 간단했다! Back Ofiice의 개발 가이드가 명확히 나와있지 않아 각자 개발자가 개발하던 중 특정 개발자는 &amp;lt;form&amp;gt; tag를 영역 전체에 씌워 두었다..! 하여 해당 영역 내의 버튼 중 따로 type을 정의하지 않은 것을 클릭 시 submit Event가 발생하여 페이지를 자기 자신으로 redirect하고 있었다.</description>
    </item>
    
    <item>
      <title>Function Package</title>
      <link>https://HyoseungJeon.github.io/posts/java/function-package/</link>
      <pubDate>Wed, 27 Dec 2023 14:59:39 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/java/function-package/</guid>
      <description>💡 Jobrunr로 개발된 Batch Project에 새로운 job을 개발하게 되었다! 기존에 Spring batch와 모습이 달라 구조에 대해서 파악하던 중 Job 구조를 Java Function Package 기술을 적극 활용하여 구현되어 있었다! 기존에 가볍게 넘어가던 부분을 이번 기회에 제대로 확인해보자 싶어서 알아보게 되었다!! 한번 같이 자세히 들여다보자~😁😁 Function Package 정의 Functional interfaces provide target types for lambda expressions and method references. Each functional interface has a single abstract method, called the functional method for that functional interface, to which the lambda expression&amp;rsquo;s parameter and return types are matched or adapted.</description>
    </item>
    
    <item>
      <title>OAuth</title>
      <link>https://HyoseungJeon.github.io/posts/etc/oauth/</link>
      <pubDate>Fri, 08 Dec 2023 10:55:46 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/etc/oauth/</guid>
      <description>💡 프로젝트에서 회원 모듈을 담당하시던 분들이 철수하게 되었다! 해서 간단하게 인수인계를 받게 되었는데 그 중 OAuth라는 단어를 알게 되었다..! OAuth..? 생전 처음 들어보는 단어였다..😅 하여 내용에 대해 한번 알아보자는 생각으로 접근하게 되었다!! 알면 좋지 않을까..? OAuth 정의 OAuth 2.0 is the industry-standard protocol for authorization. OAuth 2.0 focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. This specification and its extensions are being developed within the IETF OAuth Working Group.</description>
    </item>
    
    <item>
      <title>Cursor</title>
      <link>https://HyoseungJeon.github.io/posts/java/cursor/</link>
      <pubDate>Thu, 23 Nov 2023 08:58:04 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/java/cursor/</guid>
      <description>💡 Batch 개발을 하는 도중 다른 job 소스를 참고하는데 엄청나게 많은 데이터를 읽어오는 reader 단을 짠 소스를 보았다..!! 이거 이렇게 읽어와도.. 문제가 없나?? 라는 생각이 들었고 내부 소스를 확인해보니.. Cursor 란 친구로 데이터를 읽어오고 있었다! 이전에 본 적이 없는 Class 였다!! 이 친구가 문제를 해결해 주고 있는 것 같아 내용이 궁금해져서 찾아보게 되었다!! Cursor란? 정의 Cursor contract to handle fetching items lazily using an Iterator. Cursors are a perfect fit to handle millions of items queries that would not normally fit in memory.</description>
    </item>
    
    <item>
      <title>MSA 환경 TraceId Logging</title>
      <link>https://HyoseungJeon.github.io/posts/etc/msa-%ED%99%98%EA%B2%BD-traceid-logging/</link>
      <pubDate>Wed, 22 Nov 2023 10:26:29 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/etc/msa-%ED%99%98%EA%B2%BD-traceid-logging/</guid>
      <description>💡 요즘 프로젝트를 가면 다 MSA 환경으로 개발하고 있다! 하여 APM을 통한 모니터링을 할 때 TraceId를 통해 flow를 확인하고 있는데.. 실제로 이게 어떻게 구현되는지 궁금했다..! 한번 그에 대해 내용을 알아보자~~~!😊😊 개요 MSA 환경의 Monitoring 대부분의 프로젝트는 요즘 분산 환경으로 구현되어 있다! 하여 복잡한 로직들은 N개의 프로젝트 흐름을 거쳐 실행된다! 하지만 실제로 해당 흐름을 추적하는 일은 조금 어렵다.. (Trace Id가 없었다면..!) 하여 위와 같은 애로사항을 해결하기 위한 방법이 필요했고 그 방식으로 TraceId를 부여하는 logging 방식이 등장했다!</description>
    </item>
    
    <item>
      <title>Spring Security</title>
      <link>https://HyoseungJeon.github.io/posts/spring/springsecurity/</link>
      <pubDate>Fri, 10 Nov 2023 11:21:25 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/spring/springsecurity/</guid>
      <description>💡 새로운 프로젝트에 들어와 공통 모듈을 맡으며 처음으로 계정 권한에 관련한 작업을 맡게 됐다! 하여 현재 계정의 권한이 어떤 방법으로 부여되는지 소스 코드를 살펴보게 되었는데.. Spring Security를 사용하여 구현하고 있었다.. 말로만 들어보고 건드려 본 적이 없는 영역인데 이번 기회에 한번 알아보자!! 😎😎 Spring Security Spring Security란? Spring Security is a powerful and highly customizable authentication and access-control framework. It is the de-facto standard for securing Spring-based applications.
Spring Security is a framework that focuses on providing both authentication and authorization to Java applications.</description>
    </item>
    
    <item>
      <title>With Recursive</title>
      <link>https://HyoseungJeon.github.io/posts/sql/withrecursive/</link>
      <pubDate>Tue, 07 Nov 2023 14:56:02 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/sql/withrecursive/</guid>
      <description>🔥 이전에 공통 개발 건이 생겨 ZTree 라는 Lib 을 이용해 개발을 한 적이 있다! 하여 해당 tree 구조의 Data를 뽑기 위해 사용된 API를 확인하던 중 위 문법을 처음 발견했다..! Query에 이런 문법이 존재 하는지도 처음 알았는데 그 사용법과 동작 방식 또한 RDB에서 접하지 못한 방식이라.. 매우 신기했다..! 그 내용이 뭔지 같이 알아보자~~😁✌ With Queries 정의 WITH provides a way to write auxiliary statements for use in a larger query.</description>
    </item>
    
    <item>
      <title>ZTree</title>
      <link>https://HyoseungJeon.github.io/posts/jquery/ztree/</link>
      <pubDate>Tue, 31 Oct 2023 14:07:43 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/jquery/ztree/</guid>
      <description>💡 공통 개발을 하며 개선 건이 생겼다! 기존에 계정의 권한을 관리할 때에 Grid에 뿌려진 Data를 찾아 해당 사용여부를 Y로 업데이트 해야 하는 번거로움이 있었다..! 아마 초기 설계했을 때에는 관리되는 데이터의 수가 적어 그런 것 같은데.. 관리 대상의 수가 6,000건 정도로 늘어나니 제대로 권한 관리하기가 어려웠다!! 하여 해당 자료구조를 Tree 형태로 마이그레이션 하게 됐다! 기존에 사용되던 ZTree Lib를 활용하여 개발하기로 의사결정이 되었다! 한번 해보자.. Z Tree 정의 zTree is an advanced jQuery &amp;rsquo;tree plug-in&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>Clean Architecture</title>
      <link>https://HyoseungJeon.github.io/posts/%EB%8F%85%ED%9B%84%EA%B0%90/cleanarchitecture/</link>
      <pubDate>Wed, 25 Oct 2023 11:03:36 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/%EB%8F%85%ED%9B%84%EA%B0%90/cleanarchitecture/</guid>
      <description>Clean Architecture 소프트웨어 구조와 설계의 원칙 로버트 C. 마틴 지음 | 송준이 옮김
서론 우아한 스터디에서 해당 책을 주제로 스터디 모임이 열렸다! 공개 모집이라 여러가지 좋은 내용의 스터디 그룹들이 있었지만 구조 설계에 관심이 많아 해당 스터디에 지원했었다..
하지만 탈락.. 😂😂 그래도 책에 대해 찾아보니 좋은 내용의 도서인 것 같아 한번 읽어보면 좋겠다 라는 생각이 들어 회사를 통해 구매했다!!
책의 전반적인 내용은 소프트웨어 아키텍쳐의 중요성과 그 설계 방법, 노하우 등 다년간의 경험을 통한 지식들을 전달하는 내용이다!</description>
    </item>
    
    <item>
      <title>Properties Auto Upper</title>
      <link>https://HyoseungJeon.github.io/posts/intellij/propertiesautoupper/</link>
      <pubDate>Tue, 17 Oct 2023 10:14:27 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/intellij/propertiesautoupper/</guid>
      <description>문제 Intellij 내에서 간단한 문구 수정 때문에 properties file을 수정했는데 갑자기 file 전체에 변경사항이 잡혔다! 내용을 확인해보니 utf-8 Code 의 제일 앞 알파벳이 다 대문자로 upper 된 것 이였다..;
원인 사실 크게 문제가 될 것 같지는 않지만 코드 리뷰 페이지에서 file 전체에 변경사항이 잡혀 edit line이 쓸데없이 많이 counting 되었다. 또한 호오오오옥~~ 시나 모르는 bug가 발생할 가능성이 무서워.. 수정을 해야할 것 같았다!
문제의 원인은 project를 처음에 import 할 때에 eclipse type으로 열면 project option이 auto upper로 설정되는 듯 하였다!</description>
    </item>
    
    <item>
      <title>Synchronized</title>
      <link>https://HyoseungJeon.github.io/posts/java/synchronized/</link>
      <pubDate>Tue, 17 Oct 2023 09:04:56 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/java/synchronized/</guid>
      <description>💡 Push Message Server에 문제가 발생했다! 등록된 결함의 내용은 간헐적으로 push 알림이 사용자에게 2건 씩 날라간다는 내용이였다. 그 이유는 무엇일까?? 이유는 Multi Thread 환경에서 Data의 동기 처리가 제대로 되어있지 않아서 였다.. 좀 더 잣세히 알아보자! Synchronized Synchronized란? The Java programming language provides two basic synchronization idioms: synchronized methods and synchronized statements. The more complex of the two, synchronized statements, are described in the next section. This section is about synchronized methods.</description>
    </item>
    
    <item>
      <title>Nud 메모리누수</title>
      <link>https://HyoseungJeon.github.io/posts/window/nud%EB%A9%94%EB%AA%A8%EB%A6%AC%EB%88%84%EC%88%98/</link>
      <pubDate>Mon, 18 Sep 2023 08:34:54 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/window/nud%EB%A9%94%EB%AA%A8%EB%A6%AC%EB%88%84%EC%88%98/</guid>
      <description>💡 프로젝트 투입 후 새로운 노트북을 지원 받아 일을 하게 됐다! 근데.. 시간이 지날수록 Intellij의 성능이 매우 느려졌고.. 컴퓨터의 기능이 정지하는 수준까지 가게 되었다.. 해서 작업관리자를 먼저 확인해보니 Memory의 점유율이 이상했다.. 노트북은 16GB의 Memory를 갖고 있었는데 실제로 가용한 메모리의 양이 11GB 정도였다! 해서 추가적으로 확인해보니 Memory의 비페이징 풀 이라는 항목이 3.5GB 정도를 점유하고 있었다.. 하여 그 문제점을 해결하던 중 window의 NUD 를 발견하게 되었다..! 이 문제를 좀 알아보자.. Window NUD NDU란?</description>
    </item>
    
    <item>
      <title>Nice본인인증이슈대응2</title>
      <link>https://HyoseungJeon.github.io/posts/api/nice%EB%B3%B8%EC%9D%B8%EC%9D%B8%EC%A6%9D%EC%9D%B4%EC%8A%88%EB%8C%80%EC%9D%912/</link>
      <pubDate>Fri, 15 Sep 2023 09:41:20 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/api/nice%EB%B3%B8%EC%9D%B8%EC%9D%B8%EC%A6%9D%EC%9D%B4%EC%8A%88%EB%8C%80%EC%9D%912/</guid>
      <description>Nice본인인증 이슈2 문제 본인인증 기능이 운영기에 배포 후 얼마 지나지 않아 특정 사용자가 인증에 지속적으로 실패하는 문제가 발생했다!
원인 Kibana Log를 살펴본 결과 Nice의 본인인증 완료 후 화면에 encoding Data를 받아 복호화 하는 과정중에 에러가 발생했다! 그리고 복호화 실패의 원인은 유효한 encoding Data가 아닌 값을 받아 발생하였다.
하여 해당 사용자의 request URI를 기준으로 local에서 test 해본 결과 encdoing Data가 변조 되어 controller 단에서 받아 문제가 생겼다! 하여 변조된 과정을 따라가보니 Nice 본인인증에서 Get 방식으로 URI에 data를 담아 보내주는데, base64 encoding 방식을 사용하여 특수문자가 포함된 param을 보내고 있었다!</description>
    </item>
    
    <item>
      <title>Nice본인인증 이슈대응</title>
      <link>https://HyoseungJeon.github.io/posts/api/nice%EB%B3%B8%EC%9D%B8%EC%9D%B8%EC%A6%9D%EC%9D%B4%EC%8A%88%EB%8C%80%EC%9D%91/</link>
      <pubDate>Mon, 28 Aug 2023 10:20:45 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/api/nice%EB%B3%B8%EC%9D%B8%EC%9D%B8%EC%A6%9D%EC%9D%B4%EC%8A%88%EB%8C%80%EC%9D%91/</guid>
      <description>Nice본인인증 이슈 문제 issue로 올라온 사항은 Android, IOS App 단에서 본인인증이 제대로 실행되지 않는다는 사항이였다! 본인인증 popup에서 인증을 완료 시 정상적으로 처리되지 않고 에러페이지로 이동하는 상황 이였다.
원인 문제의 원인은 본인인증 Callback method가 실행되지 않는 상황이였다!!
현재 구현된 프로젝트는 하이브리드 App방식으로 Android, IOS 각 OS의 Webview를 통해 App을 구현하고 있었다! 하지만 내가 기존에 구현한 방식은 해당 환경까지 듣지 못하여 App 환경까지 고려하여 구현을 하지 않았다.. 🤦‍♂️ 기존에는 Web의 BOM을 활용하여 opener.</description>
    </item>
    
    <item>
      <title>Custom Validate</title>
      <link>https://HyoseungJeon.github.io/posts/javascript/customvalidate/</link>
      <pubDate>Wed, 23 Aug 2023 10:30:10 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/javascript/customvalidate/</guid>
      <description>JQuery Custom Validate 개발 방향 지난번 JQuery Validate Plugin은 rule과 message를 mapping 해서 할당 후 노출하는 구조였다! 해서 내가 해결하려고 했던 정적으로 message를 계속 선언하는 부분이 개선되지 않았다. 해서 field의 attribute 값들로 모든 setting이 가능한 방식으로 구현을 해보려고 한다…! 😁😁
소스 validateForm(formId) { const formTag = $(`#${formId}`) // form tag check if (!formTag.is(&amp;#34;form&amp;#34;)) { console.error(`${formId} is not Form tag or can&amp;#39;t find!! check id`) alert(&amp;#34;사용자 에러 메세지 노출&amp;#34;); return false; } // 하위 all input, select element 조회 for(let element of formTag.</description>
    </item>
    
    <item>
      <title>JQuery Validate</title>
      <link>https://HyoseungJeon.github.io/posts/jquery/validate/</link>
      <pubDate>Wed, 16 Aug 2023 16:46:12 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/jquery/validate/</guid>
      <description>💡 프로젝트 투입 후 맡게 된 화면에서 가변 Input field가 추가되었는데 Validate 부분이 분기 문으로 처리되어 있었다..! 해서 결국 관련된 소스를 하나하나 찾아서 추가하고 영향도 있는 부분은 수정하는 작업을 했다… 사실상 요구사항은 간단했지만 필요 이상으로 작업이 오래 걸렸다! 그럼으로 기존 분기 처리로 된 Validate가 아닌 jQuery 기반의 Validate로 구현을 한번 해보자! JQuery Validate? 정의 The jQuery Validation Plugin provides drop-in validation for your existing forms, while making all kinds of customizations to fit your application really easy.</description>
    </item>
    
    <item>
      <title>FCM</title>
      <link>https://HyoseungJeon.github.io/posts/api/fcm/</link>
      <pubDate>Thu, 10 Aug 2023 09:45:10 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/api/fcm/</guid>
      <description>💡 새로운 프로젝트에서 Push 알림 기능을 담당하게 됐다! 웹 개발을 하면서 한번도 접해보지 못했었는데 문자/이메일 은 너무 많이 경험해본 것 같아 Push를 해보겠다고 하였다!!😁😁 좋은 경험이 되기를!!!! FCM이란? 정의 Firebase Cloud Messaging(FCM)은 메시지를 안정적으로 무료 전송할 수 있는 크로스 플랫폼 메시징 솔루션입니다. 출처 - https://firebase.google.com/docs/cloud-messaging?hl=ko
기능 알림 메시지 또는 데이터 메시지 전송 사용자에게 표시되는 알림 메시지를 전송합니다. 또는 데이터 메시지를 전송하고 애플리케이션 코드에서 임의로 처리합니다. 자세한 내용은 https://firebase.google.com/docs/cloud-messaging/concept-options?hl=ko#notifications_and_data_messages을 참조하세요. 다양한 메시지 타겟팅 단일 기기, 기기 그룹, 주제를 구독한 기기 등 3가지 방식으로 클라이언트 앱에 메시지를 배포할 수 있습니다.</description>
    </item>
    
    <item>
      <title>File</title>
      <link>https://HyoseungJeon.github.io/posts/java/file/</link>
      <pubDate>Mon, 07 Aug 2023 16:19:24 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/java/file/</guid>
      <description>💡 사용자에게 현재 STATIC Directory에 있는 pdf File 들을 다운로드 기능과 함께 목록을 제공하는 기능을 구현하는 일을 받았다! 정적 자산을 객체로 받아 화면에 알맞게 던져주는 기능을 구현해보자!! 생각보다 자주 구현할 일이 있는 기능이지만 실제로는 처음 해봐서 재미있었다..😁👍 File Class 란? 정의 An abstract representation of file and directory pathnames.
User interfaces and operating systems use system-dependent pathname strings to name files and directories. This class presents an abstract, system-independent view of hierarchical pathnames.</description>
    </item>
    
    <item>
      <title>Nice 본인인증</title>
      <link>https://HyoseungJeon.github.io/posts/api/nice%EB%B3%B8%EC%9D%B8%EC%9D%B8%EC%A6%9D/</link>
      <pubDate>Thu, 27 Jul 2023 15:13:07 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/api/nice%EB%B3%B8%EC%9D%B8%EC%9D%B8%EC%A6%9D/</guid>
      <description>💡 새로운 Project에 투입되어 바로 Nice 본인 인증 API 기능을 추가하는 작업을 배정 받았다! Spring JSP, thymeleaf 각 project에 추가를 하면 된다!! 여기 저기서 사용하는 외부 API 로 실제 내가 개발해보는 재미를 느껴보자😍 Nice 본인인증 이란? NICE 평가정보 회사에서 제공하는 본인 확인 서비스로 사용자의 주민등록번호 등과 같은 정보를 통해 실명 확인 과정을 거쳐 사용자의 명의를 확인할 수 있는 기능을 제공하는 API 이다.
아마 내 생각엔 국내에서 개인 인증을 해야 하는 모든 사이트들이 API를 사용하여 인증을 하고 있을 것이다!</description>
    </item>
    
    <item>
      <title>Strategy Pattern</title>
      <link>https://HyoseungJeon.github.io/posts/designpattern/behavioralpatterns/strategypattern/</link>
      <pubDate>Mon, 24 Jul 2023 09:29:01 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/designpattern/behavioralpatterns/strategypattern/</guid>
      <description>💡 주로 Business Logic 을 작성하거나 혹은 보게 될 때 방대한 if else 분기와 보일러 플레이트들을 마주하게 된다!! 이는 Debuging 과정을 힘들게 하여.. 결국 지속적으로 안좋은 코드를 만들게 된다.. 하여 간단한 전략 패턴을 배워보고 활용해보자!! 전략 패턴이란? (Strategy Pattern) 정의 전략 패턴(strategy pattern) 또는 정책 패턴(policy pattern)은 실행 중에 알고리즘을 선택할 수 있게 하는 행위 소프트웨어 디자인 패턴이다. 전략 패턴은
특정한 계열의 알고리즘들을 정의하고 각 알고리즘을 캡슐화하며 이 알고리즘들을 해당 계열 안에서 상호 교체가 가능하게 만든다.</description>
    </item>
    
    <item>
      <title>Reflection</title>
      <link>https://HyoseungJeon.github.io/posts/java/reflection/</link>
      <pubDate>Fri, 21 Jul 2023 13:48:03 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/java/reflection/</guid>
      <description>Reflection이란? 정의 Reflection enables Java code to discover information about the fields, methods and constructors of loaded classes, and to use reflected fields, methods, and constructors to operate on their underlying counterparts, within security restrictions. The API accommodates applications that need access to either the public members of a target object (based on its runtime class) or the members declared by a given class. It also allows programs to suppress default reflective access control.</description>
    </item>
    
    <item>
      <title>Generic</title>
      <link>https://HyoseungJeon.github.io/posts/java/generic/</link>
      <pubDate>Fri, 21 Jul 2023 08:27:33 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/java/generic/</guid>
      <description>Generic이란? Oracle Java Docs에서는 A generic type is a generic class or interface that is parameterized over types. 라고 설명하고 있다.
Type을 매개 변수로 받는 class, interface 라고 해석이 되는 듯하다..? 😂
즉, class를 정의할 때에 바깥에서 class 내부 field의 type를 정의할 수 있는 방법이다.
하여 객체를 선언할 때 class는 같지만 field Type이 다른 형태로 만들 수 있다. 우리가 가장 익숙한 곳은 아마 Collection Lib 를 사용할 때 일거다.</description>
    </item>
    
    <item>
      <title>Async</title>
      <link>https://HyoseungJeon.github.io/posts/spring/async/</link>
      <pubDate>Thu, 20 Jul 2023 11:07:59 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/spring/async/</guid>
      <description>알게된 계기 이전 포스팅에서 Java의 Future 관련한 내용을 작성했었다. 그 내용을 요약하면 메일, 문자 발송 시스템의 처리 시간이 너무 불필요하게 길다는 것 이였다. 그 문제의 원인은 결국 blocking 발생 이였다. 하지만 Future 를 통하여 구현된 부분은 request 송신에 공통으로 사용된 부분 이였고 이와 별개로 내부 process Logic내에서 필요 없는 cost를 통해 지연이 발생하였고 하여 이를 병렬 처리하는 것이 필요했다. 하여 내용을 찾아보던 중 Spring에서 비동기 method 기능을 지원한다는 것을 발견하였다.</description>
    </item>
    
    <item>
      <title>23.07.18</title>
      <link>https://HyoseungJeon.github.io/posts/%EC%9D%BC%EA%B8%B0%EC%9E%A5/23-07-18/</link>
      <pubDate>Tue, 18 Jul 2023 14:47:51 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/%EC%9D%BC%EA%B8%B0%EC%9E%A5/23-07-18/</guid>
      <description>개발 블로그를 처음으로 개설했다..!
사실 이전부터 블로그를 만들어 보려고 했지만 그 필요성을 잘 느끼지 못하여.. 만들지 않았다..! 무언가 다른 개발자들에게 정확하지 않은 정보를 전달하게 되거나 혹은 그냥 포트폴리오를 보여주기 위한 도구 같다고만 느꼈다..
근데 실제 취업 후 여러 프로젝트를 진행해보며 여러 장애들을 겪고 또 야근을 하며 개발을 해보며 지내본 결과.. 내 경험을 모두 머리속에 기억하기는 정말로 어렵다.. 기존에는 노트나 메모지에 적어두고 기록해 왔었는데 실제로 해당 내용을 다시 찾을 때에는 너무 시간이 오래 걸리고 때때로 급한 마음에 마구마구 갈겨 쓴 글씨 때문에 나 조차도 못알아보는 기록들이 너무 많았다 ㅠ&amp;hellip;</description>
    </item>
    
    <item>
      <title>setDate</title>
      <link>https://HyoseungJeon.github.io/posts/javascript/date/setdate/</link>
      <pubDate>Tue, 18 Jul 2023 11:13:10 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/javascript/date/setdate/</guid>
      <description>dateObj.setDate(dayValue) var theBigDay = new Date(1962, 6, 7); // 1962-07-07 theBigDay.setDate(24); // 1962-07-24 theBigDay.setDate(22); // 1962-08-22 해당 Date 객체의 날짜(day)를 설정하는 함수
입력된 dayValue 값으로 날짜를 변경 한다.
별로 특이해 보이지 않지만 변경 이라는 부분 때문에 보이지 않는 에러가 발생한 경우가 있다.
위 기능을 통하여 js 내에서 날짜를 변경 하게 되는데
var theBigDay = new Date(1962, 6, 7); // 1962-07-07 theBigDay.setDate(32); // 1962-08-01 theBigDay.setDate(0); // 1962-07-31 예제와 같이 날짜 범위를 자동으로 계산해 Date를 set 한다.</description>
    </item>
    
    <item>
      <title>Thymeleaf</title>
      <link>https://HyoseungJeon.github.io/posts/intellij/thymeleaf/</link>
      <pubDate>Tue, 18 Jul 2023 11:13:10 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/intellij/thymeleaf/</guid>
      <description>프로젝트를 옮기고 Spring 프로젝트를 세팅 하는 중 build error가 발생하였다!
그 중 익숙하지 않은 build error가 있었는데
Thymeleaf 관련 Directory를 추적하지 못하여 file not found Error가 나왔다..!
알고 보니 따로 Template Engine을 설정하여 Project를 생성한 경우가 아닐 시 자동으로 추적 경로가 등록되지 않는 경우 같더라..
내용을 추가적으로 찾아보니 Maven의 경우 따로 실행 Configurations 내 Working Directory 잡아주어야 한다는 내용을 찾았다..!
Thymeleaf 프로젝트 build 시 Maven 관리 도구를 사용 중이고 따로 importing 한 프로젝트 라면 /WEB-INF/</description>
    </item>
    
    <item>
      <title>Future</title>
      <link>https://HyoseungJeon.github.io/posts/java/future/</link>
      <pubDate>Mon, 17 Jul 2023 13:03:35 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/java/future/</guid>
      <description>Future란? Java 1.5에 공개된 비동기 process 처리를 지원하는 interface Class 이다.
비동기 방식을 지원하기 위해 당연하게도 mulitThread 방식을 활용하여 해당 기능을 지원하고 있다. 기존의 Thread 직접 선언 및 관리 방식과 다르게 interface를 활용하여 비동기를 구현할 수 있어 안정적인 비동기 구현 방법이다.
해당 비동기 process를 호출 thread에서 사용 가능하다.
단, 해당 값 조회를 시도할 시 blocking 상태로 변화하여 지연이 발생할 수 있다.
Methods V get(), get(Long time, TimeUnit unit)
실행 결과 값을 조회하는 method</description>
    </item>
    
    <item>
      <title>Spring</title>
      <link>https://HyoseungJeon.github.io/spring/</link>
      <pubDate>Thu, 13 Jul 2023 11:26:21 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/spring/</guid>
      <description></description>
    </item>
    
    <item>
      <title>첫 포스트</title>
      <link>https://HyoseungJeon.github.io/ch/</link>
      <pubDate>Thu, 13 Jul 2023 09:44:22 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/ch/</guid>
      <description></description>
    </item>
    
    <item>
      <title>RequestContextHolder</title>
      <link>https://HyoseungJeon.github.io/posts/spring/requestcontextholder/</link>
      <pubDate>Fri, 07 Jul 2023 10:47:43 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/spring/requestcontextholder/</guid>
      <description>설명 Spring 2.0 부터 추가된 기능으로 Request 인입 후 thread 생성 된 시점부터 전 구간에서 HttpServletRequest에 접근을 가능하게 해주는 기능이다.
기존 Controller 단에 parameter 형식으로 선언 후 참고하던 방식과 다르게 위 객체를 통하여 request에 접근이 가능하다.
예제 소스 :
@GetMapping(&amp;#34;hello&amp;#34;) public void before(HttpServletRequest request) { sampleService.hello(request); } @GetMapping(&amp;#34;hello&amp;#34;) public void after() { HttpServletRequest request = ((ServletRequestAttributes)RequestContextHolder.currentRequestAttributes()).getRequest(); sampleService.hello(request); } 동작 원리 Request 인입 시 Spring 내 ThreadLocal 이라는 공간에 값을 저장하는 방식이다.</description>
    </item>
    
    <item>
      <title>My 1st post</title>
      <link>https://HyoseungJeon.github.io/test1/</link>
      <pubDate>Tue, 15 Sep 2020 11:30:03 +0000</pubDate>
      
      <guid>https://HyoseungJeon.github.io/test1/</guid>
      <description>Desc Text.</description>
    </item>
    
    
    
  </channel>
</rss>
