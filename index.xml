<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>HyoSeung IT blog</title>
    <link>https://HyoseungJeon.github.io/</link>
    <description>Recent content on HyoSeung IT blog</description>
    <image>
      <title>HyoSeung IT blog</title>
      <url>https://HyoseungJeon.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://HyoseungJeon.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Fri, 07 Jul 2023 10:47:43 +0900</lastBuildDate><atom:link href="https://HyoseungJeon.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RequestContextHolder</title>
      <link>https://HyoseungJeon.github.io/posts/spring/requestcontextholder/</link>
      <pubDate>Fri, 07 Jul 2023 10:47:43 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/spring/requestcontextholder/</guid>
      <description>설명 Spring 2.0 부터 추가된 기능으로 Request 인입 후 thread 생성 된 시점부터 전 구간에서 HttpServletRequest에 접근을 가능하게 해주는 기능이다.
기존 Controller 단에 parameter 형식으로 선언 후 참고하던 방식과 다르게 위 객체를 통하여 request에 접근이 가능하다.
예제 소스 :
@GetMapping(&amp;#34;hello&amp;#34;) public void before(HttpServletRequest request) { sampleService.hello(request); } @GetMapping(&amp;#34;hello&amp;#34;) public void after() { HttpServletRequest request = ((ServletRequestAttributes)RequestContextHolder.currentRequestAttributes()).getRequest(); sampleService.hello(request); } 동작 원리 Request 인입 시 Spring 내 ThreadLocal 이라는 공간에 값을 저장하는 방식이다.</description>
    </item>
    
    <item>
      <title>Spring</title>
      <link>https://HyoseungJeon.github.io/spring/</link>
      <pubDate>Thu, 13 Jul 2023 11:26:21 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/spring/</guid>
      <description></description>
    </item>
    
    <item>
      <title>첫 포스트</title>
      <link>https://HyoseungJeon.github.io/ch/</link>
      <pubDate>Thu, 13 Jul 2023 09:44:22 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/ch/</guid>
      <description></description>
    </item>
    
    <item>
      <title>My 1st post</title>
      <link>https://HyoseungJeon.github.io/test1/</link>
      <pubDate>Tue, 15 Sep 2020 11:30:03 +0000</pubDate>
      
      <guid>https://HyoseungJeon.github.io/test1/</guid>
      <description>Desc Text.</description>
    </item>
    
  </channel>
</rss>
