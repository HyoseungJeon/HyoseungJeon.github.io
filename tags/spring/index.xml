<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Spring on HyoSeung IT blog</title>
    <link>https://HyoseungJeon.github.io/tags/spring/</link>
    <description>Recent content in Spring on HyoSeung IT blog</description>
    <image>
      <title>HyoSeung IT blog</title>
      <url>https://HyoseungJeon.github.io/profile2.png</url>
      <link>https://HyoseungJeon.github.io/profile2.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Thu, 15 Feb 2024 10:38:49 +0900</lastBuildDate><atom:link href="https://HyoseungJeon.github.io/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Scope</title>
      <link>https://HyoseungJeon.github.io/posts/spring/scope/</link>
      <pubDate>Thu, 15 Feb 2024 10:38:49 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/spring/scope/</guid>
      <description>💡 MSA 환경에서 개발을 하다 보니.. 여러가지 애로사항이 있다.. 😂 그 중 요즘 개발 중 가장 귀찮다고 느끼는 일은.. DB insert 시 식별자 값을 넣는 일이다..! 주로 생성자, 수정자 ID를 넣는 경우가 대부분인데.. 현 프로젝트에선 매번 해당 id 값들을 set, set, set 한다.. (너무 귀찮다..) 하여 Context로 소지하고 있는 userId 값을 mybatis의 bind로 가져와 set 하는 방식으로 전환 했다! 헌데 문제는.. MSA 환경에서 다른 서버로 값을 전달 시 Context를 그대로 사용하기 어렵다는 점 이였다.</description>
    </item>
    
    <item>
      <title>Spring Security</title>
      <link>https://HyoseungJeon.github.io/posts/spring/springsecurity/</link>
      <pubDate>Fri, 10 Nov 2023 11:21:25 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/spring/springsecurity/</guid>
      <description>💡 새로운 프로젝트에 들어와 공통 모듈을 맡으며 처음으로 계정 권한에 관련한 작업을 맡게 됐다! 하여 현재 계정의 권한이 어떤 방법으로 부여되는지 소스 코드를 살펴보게 되었는데.. Spring Security를 사용하여 구현하고 있었다.. 말로만 들어보고 건드려 본 적이 없는 영역인데 이번 기회에 한번 알아보자!! 😎😎 Spring Security Spring Security란? Spring Security is a powerful and highly customizable authentication and access-control framework. It is the de-facto standard for securing Spring-based applications.
Spring Security is a framework that focuses on providing both authentication and authorization to Java applications.</description>
    </item>
    
    <item>
      <title>FCM</title>
      <link>https://HyoseungJeon.github.io/posts/api/fcm/</link>
      <pubDate>Thu, 10 Aug 2023 09:45:10 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/api/fcm/</guid>
      <description>💡 새로운 프로젝트에서 Push 알림 기능을 담당하게 됐다! 웹 개발을 하면서 한번도 접해보지 못했었는데 문자/이메일 은 너무 많이 경험해본 것 같아 Push를 해보겠다고 하였다!!😁😁 좋은 경험이 되기를!!!! FCM이란? 정의 Firebase Cloud Messaging(FCM)은 메시지를 안정적으로 무료 전송할 수 있는 크로스 플랫폼 메시징 솔루션입니다. 출처 - https://firebase.google.com/docs/cloud-messaging?hl=ko
기능 알림 메시지 또는 데이터 메시지 전송 사용자에게 표시되는 알림 메시지를 전송합니다. 또는 데이터 메시지를 전송하고 애플리케이션 코드에서 임의로 처리합니다. 자세한 내용은 https://firebase.google.com/docs/cloud-messaging/concept-options?hl=ko#notifications_and_data_messages을 참조하세요. 다양한 메시지 타겟팅 단일 기기, 기기 그룹, 주제를 구독한 기기 등 3가지 방식으로 클라이언트 앱에 메시지를 배포할 수 있습니다.</description>
    </item>
    
    <item>
      <title>Async</title>
      <link>https://HyoseungJeon.github.io/posts/spring/async/</link>
      <pubDate>Thu, 20 Jul 2023 11:07:59 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/spring/async/</guid>
      <description>알게된 계기 이전 포스팅에서 Java의 Future 관련한 내용을 작성했었다. 그 내용을 요약하면 메일, 문자 발송 시스템의 처리 시간이 너무 불필요하게 길다는 것 이였다. 그 문제의 원인은 결국 blocking 발생 이였다. 하지만 Future 를 통하여 구현된 부분은 request 송신에 공통으로 사용된 부분 이였고 이와 별개로 내부 process Logic내에서 필요 없는 cost를 통해 지연이 발생하였고 하여 이를 병렬 처리하는 것이 필요했다. 하여 내용을 찾아보던 중 Spring에서 비동기 method 기능을 지원한다는 것을 발견하였다.</description>
    </item>
    
  </channel>
</rss>
