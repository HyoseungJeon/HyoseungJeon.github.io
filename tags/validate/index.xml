<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Validate on HyoSeung IT blog</title>
    <link>https://HyoseungJeon.github.io/tags/validate/</link>
    <description>Recent content in Validate on HyoSeung IT blog</description>
    <image>
      <title>HyoSeung IT blog</title>
      <url>https://HyoseungJeon.github.io/profile2.png</url>
      <link>https://HyoseungJeon.github.io/profile2.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 22 Apr 2024 10:39:08 +0900</lastBuildDate><atom:link href="https://HyoseungJeon.github.io/tags/validate/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Custom Validate Annotation</title>
      <link>https://HyoseungJeon.github.io/posts/spring/customvalidateannotation/</link>
      <pubDate>Mon, 22 Apr 2024 10:39:08 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/spring/customvalidateannotation/</guid>
      <description>💡 프로젝트가 자체 Migration 작업을 하고 있다! 하여 다른 모듈에서 공통 코드를 Enum화 하기 시작했는데, 그 중 interface Class를 통하여 공통코드를 관리하게 작업하였다! 나 또한 새로운 작업 때문에 유효성 검증 로직에 공통코드 검증 로직의 추가가 필요 했는데 해당 interface를 활용하여 @Valid 작업을 통해 간편하게 검증을 하면 좋겠다고 생각하여 해당 작업을 하게 됐다!! 😁😁 한번 만들어보자~~ 문제 정의 현재 공통코드 값으로 검증하는 로직은 각자 정적인 방식으로 검증하는 로직을 사용하거나 검증을 하지 않고 있다.</description>
    </item>
    
    <item>
      <title>Custom Validate</title>
      <link>https://HyoseungJeon.github.io/posts/javascript/customvalidate/</link>
      <pubDate>Wed, 23 Aug 2023 10:30:10 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/javascript/customvalidate/</guid>
      <description>JQuery Custom Validate 개발 방향 지난번 JQuery Validate Plugin은 rule과 message를 mapping 해서 할당 후 노출하는 구조였다! 해서 내가 해결하려고 했던 정적으로 message를 계속 선언하는 부분이 개선되지 않았다. 해서 field의 attribute 값들로 모든 setting이 가능한 방식으로 구현을 해보려고 한다…! 😁😁
소스 validateForm(formId) { const formTag = $(`#${formId}`) // form tag check if (!formTag.is(&amp;#34;form&amp;#34;)) { console.error(`${formId} is not Form tag or can&amp;#39;t find!! check id`) alert(&amp;#34;사용자 에러 메세지 노출&amp;#34;); return false; } // 하위 all input, select element 조회 for(let element of formTag.</description>
    </item>
    
    <item>
      <title>JQuery Validate</title>
      <link>https://HyoseungJeon.github.io/posts/jquery/validate/</link>
      <pubDate>Wed, 16 Aug 2023 16:46:12 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/jquery/validate/</guid>
      <description>💡 프로젝트 투입 후 맡게 된 화면에서 가변 Input field가 추가되었는데 Validate 부분이 분기 문으로 처리되어 있었다..! 해서 결국 관련된 소스를 하나하나 찾아서 추가하고 영향도 있는 부분은 수정하는 작업을 했다… 사실상 요구사항은 간단했지만 필요 이상으로 작업이 오래 걸렸다! 그럼으로 기존 분기 처리로 된 Validate가 아닌 jQuery 기반의 Validate로 구현을 한번 해보자! JQuery Validate? 정의 The jQuery Validation Plugin provides drop-in validation for your existing forms, while making all kinds of customizations to fit your application really easy.</description>
    </item>
    
  </channel>
</rss>
