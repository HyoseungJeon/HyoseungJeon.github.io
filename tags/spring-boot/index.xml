<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Spring Boot on HyoSeung IT blog</title>
    <link>https://HyoseungJeon.github.io/tags/spring-boot/</link>
    <description>Recent content in Spring Boot on HyoSeung IT blog</description>
    <image>
      <title>HyoSeung IT blog</title>
      <url>https://HyoseungJeon.github.io/profile2.png</url>
      <link>https://HyoseungJeon.github.io/profile2.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Thu, 15 Feb 2024 10:38:49 +0900</lastBuildDate><atom:link href="https://HyoseungJeon.github.io/tags/spring-boot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Scope</title>
      <link>https://HyoseungJeon.github.io/posts/spring/scope/</link>
      <pubDate>Thu, 15 Feb 2024 10:38:49 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/spring/scope/</guid>
      <description>💡 MSA 환경에서 개발을 하다 보니.. 여러가지 애로사항이 있다.. 😂 그 중 요즘 개발 중 가장 귀찮다고 느끼는 일은.. DB insert 시 식별자 값을 넣는 일이다..! 주로 생성자, 수정자 ID를 넣는 경우가 대부분인데.. 현 프로젝트에선 매번 해당 id 값들을 set, set, set 한다.. (너무 귀찮다..) 하여 Context로 소지하고 있는 userId 값을 mybatis의 bind로 가져와 set 하는 방식으로 전환 했다! 헌데 문제는.. MSA 환경에서 다른 서버로 값을 전달 시 Context를 그대로 사용하기 어렵다는 점 이였다.</description>
    </item>
    
    <item>
      <title>Spring Security</title>
      <link>https://HyoseungJeon.github.io/posts/spring/springsecurity/</link>
      <pubDate>Fri, 10 Nov 2023 11:21:25 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/spring/springsecurity/</guid>
      <description>💡 새로운 프로젝트에 들어와 공통 모듈을 맡으며 처음으로 계정 권한에 관련한 작업을 맡게 됐다! 하여 현재 계정의 권한이 어떤 방법으로 부여되는지 소스 코드를 살펴보게 되었는데.. Spring Security를 사용하여 구현하고 있었다.. 말로만 들어보고 건드려 본 적이 없는 영역인데 이번 기회에 한번 알아보자!! 😎😎 Spring Security Spring Security란? Spring Security is a powerful and highly customizable authentication and access-control framework. It is the de-facto standard for securing Spring-based applications.
Spring Security is a framework that focuses on providing both authentication and authorization to Java applications.</description>
    </item>
    
  </channel>
</rss>
