<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Annotation on HyoSeung IT blog</title>
    <link>https://HyoseungJeon.github.io/tags/annotation/</link>
    <description>Recent content in Annotation on HyoSeung IT blog</description>
    <image>
      <title>HyoSeung IT blog</title>
      <url>https://HyoseungJeon.github.io/profile2.png</url>
      <link>https://HyoseungJeon.github.io/profile2.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 22 Apr 2024 10:39:08 +0900</lastBuildDate><atom:link href="https://HyoseungJeon.github.io/tags/annotation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Custom Validate Annotation</title>
      <link>https://HyoseungJeon.github.io/posts/spring/customvalidateannotation/</link>
      <pubDate>Mon, 22 Apr 2024 10:39:08 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/spring/customvalidateannotation/</guid>
      <description>💡 프로젝트가 자체 Migration 작업을 하고 있다! 하여 다른 모듈에서 공통 코드를 Enum화 하기 시작했는데, 그 중 interface Class를 통하여 공통코드를 관리하게 작업하였다! 나 또한 새로운 작업 때문에 유효성 검증 로직에 공통코드 검증 로직의 추가가 필요 했는데 해당 interface를 활용하여 @Valid 작업을 통해 간편하게 검증을 하면 좋겠다고 생각하여 해당 작업을 하게 됐다!! 😁😁 한번 만들어보자~~ 문제 정의 현재 공통코드 값으로 검증하는 로직은 각자 정적인 방식으로 검증하는 로직을 사용하거나 검증을 하지 않고 있다.</description>
    </item>
    
    <item>
      <title>Async</title>
      <link>https://HyoseungJeon.github.io/posts/spring/async/</link>
      <pubDate>Thu, 20 Jul 2023 11:07:59 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/spring/async/</guid>
      <description>알게된 계기 이전 포스팅에서 Java의 Future 관련한 내용을 작성했었다. 그 내용을 요약하면 메일, 문자 발송 시스템의 처리 시간이 너무 불필요하게 길다는 것 이였다. 그 문제의 원인은 결국 blocking 발생 이였다. 하지만 Future 를 통하여 구현된 부분은 request 송신에 공통으로 사용된 부분 이였고 이와 별개로 내부 process Logic내에서 필요 없는 cost를 통해 지연이 발생하였고 하여 이를 병렬 처리하는 것이 필요했다. 하여 내용을 찾아보던 중 Spring에서 비동기 method 기능을 지원한다는 것을 발견하였다.</description>
    </item>
    
  </channel>
</rss>
