<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Infra on HyoSeung IT blog</title>
    <link>https://HyoseungJeon.github.io/posts/infra/</link>
    <description>Recent content in Infra on HyoSeung IT blog</description>
    <image>
      <title>HyoSeung IT blog</title>
      <url>https://HyoseungJeon.github.io/profile2.png</url>
      <link>https://HyoseungJeon.github.io/profile2.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Wed, 13 Aug 2025 14:44:50 +0900</lastBuildDate><atom:link href="https://HyoseungJeon.github.io/posts/infra/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Monorepo</title>
      <link>https://HyoseungJeon.github.io/posts/infra/monorepo/</link>
      <pubDate>Wed, 13 Aug 2025 14:44:50 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/infra/monorepo/</guid>
      <description>💡 롯데카드 프로젝트에 투입되며 환경을 분석하던 중 MonoRepo에 대해 듣게되었다. 소스를 받아보니 모듈별 소스가 한 프로젝트로 관리되고 있었다! 신기하네.. 정의 독립된 여러 프로젝트나 라이브러리를 하나의 저장소에서 관리하는 방식을 의미합니다.
정의는 굉장히 간단하다. 그냥 대충 프로젝트 단위의 소스를 하나의 디렉토리로 관리하고 그 디렉토리를 기준으로 Git을 올린다고 생각하면 편할 듯 하다. 장단점 장점 코드 공유·재사용 용이 – 공통 라이브러리나 유틸을 하나의 저장소에서 바로 참조 가능. 일관된 버전 관리 – 모든 프로젝트가 동일한 버전 규칙과 릴리스 사이클을 사용.</description>
    </item>
    
  </channel>
</rss>
