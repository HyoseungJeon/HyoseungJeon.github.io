<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Java on HyoSeung IT blog</title>
    <link>https://HyoseungJeon.github.io/posts/java/</link>
    <description>Recent content in Java on HyoSeung IT blog</description>
    <image>
      <title>HyoSeung IT blog</title>
      <url>https://avatars.githubusercontent.com/u/39950673?s=400&u=729b17ca9c5632e754da66f17f45eb61aeea271e&v=4</url>
      <link>https://avatars.githubusercontent.com/u/39950673?s=400&u=729b17ca9c5632e754da66f17f45eb61aeea271e&v=4</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 07 Aug 2023 16:19:24 +0900</lastBuildDate><atom:link href="https://HyoseungJeon.github.io/posts/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>File</title>
      <link>https://HyoseungJeon.github.io/posts/java/file/</link>
      <pubDate>Mon, 07 Aug 2023 16:19:24 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/java/file/</guid>
      <description>File Class 란? 정의 An abstract representation of file and directory pathnames.
User interfaces and operating systems use system-dependent pathname strings to name files and directories. This class presents an abstract, system-independent view of hierarchical pathnames.
출처 - https://docs.oracle.com/javase/8/docs/api/java/io/File.html
File, Directory의 추상 Class 즉, 파일이나 경로에 대한 정보를 추상화한 Class이다.
해당 객체는 경로의 문자열을 통하여 선언이 가능하다.
사용법 기본 import java.io.File; public class Main { public static void main(String[] args) { String filePath = &amp;#34;C:/java/Test.</description>
    </item>
    
    <item>
      <title>Reflection</title>
      <link>https://HyoseungJeon.github.io/posts/java/reflection/</link>
      <pubDate>Fri, 21 Jul 2023 13:48:03 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/java/reflection/</guid>
      <description>Reflection이란? 정의 Reflection enables Java code to discover information about the fields, methods and constructors of loaded classes, and to use reflected fields, methods, and constructors to operate on their underlying counterparts, within security restrictions. The API accommodates applications that need access to either the public members of a target object (based on its runtime class) or the members declared by a given class. It also allows programs to suppress default reflective access control.</description>
    </item>
    
    <item>
      <title>Generic</title>
      <link>https://HyoseungJeon.github.io/posts/java/generic/</link>
      <pubDate>Fri, 21 Jul 2023 08:27:33 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/java/generic/</guid>
      <description>Generic이란? Oracle Java Docs에서는 A generic type is a generic class or interface that is parameterized over types. 라고 설명하고 있다.
Type을 매개 변수로 받는 class, interface 라고 해석이 되는 듯하다..? 😂
즉, class를 정의할 때에 바깥에서 class 내부 field의 type를 정의할 수 있는 방법이다.
하여 객체를 선언할 때 class는 같지만 field Type이 다른 형태로 만들 수 있다. 우리가 가장 익숙한 곳은 아마 Collection Lib 를 사용할 때 일거다.</description>
    </item>
    
    <item>
      <title>Future</title>
      <link>https://HyoseungJeon.github.io/posts/java/future/</link>
      <pubDate>Mon, 17 Jul 2023 13:03:35 +0900</pubDate>
      
      <guid>https://HyoseungJeon.github.io/posts/java/future/</guid>
      <description>Future란? Java 1.5에 공개된 비동기 process 처리를 지원하는 interface Class 이다.
비동기 방식을 지원하기 위해 당연하게도 mulitThread 방식을 활용하여 해당 기능을 지원하고 있다. 기존의 Thread 직접 선언 및 관리 방식과 다르게 interface를 활용하여 비동기를 구현할 수 있어 안정적인 비동기 구현 방법이다.
해당 비동기 process를 호출 thread에서 사용 가능하다.
단, 해당 값 조회를 시도할 시 blocking 상태로 변화하여 지연이 발생할 수 있다.
Methods V get(), get(Long time, TimeUnit unit)
실행 결과 값을 조회하는 method</description>
    </item>
    
  </channel>
</rss>
